<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.dangdang.com/schema/ddframe/rdb
                           http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

    <!-- 默认的 Druid DataSource -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="5"/>
    </bean>

    <!-- 分库分表的 sharding DataSource-->
    <rdb:strategy id="fanTableStrategy" sharding-columns="app_id" algorithm-class="com.kuaizhan.kzweixin.utils.base.FanShardingAlgorithm"/>
    <rdb:strategy id="msgTableStrategy" sharding-columns="app_id" algorithm-class="com.kuaizhan.kzweixin.utils.base.MsgShardingAlgorithm"/>
    <rdb:strategy id="openIdTableStrategy" sharding-columns="app_id" algorithm-class="com.kuaizhan.kzweixin.utils.base.OpenIdShardingAlgorithm"/>

    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="druidDataSource">
            <rdb:table-rules>
                <rdb:table-rule logic-table="weixin_fans_0" actual-tables="${jdbc.table.fan}" table-strategy="fanTableStrategy"/>
                <rdb:table-rule logic-table="weixin_msg_0" actual-tables="${jdbc.table.msg}" table-strategy="msgTableStrategy"/>
                <rdb:table-rule logic-table="weixin_open_ids_0" actual-tables="${jdbc.table.openid}" table-strategy="openIdTableStrategy"/>
            </rdb:table-rules>
            <rdb:default-database-strategy sharding-columns="none" algorithm-class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.NoneDatabaseShardingAlgorithm"/>
        </rdb:sharding-rule>
    </rdb:data-source>

    <!--自定义的 Routing DataSource-->
    <bean id="routingDataSource" class="com.kuaizhan.kzweixin.dao.base.RoutingDataSource" >
        <property name="defaultDataSource" ref="druidDataSource" />
        <property name="shardingDataSource" ref="shardingDataSource" />
        <property name="shardingMappers" >
            <list value-type="java.lang.String">
                <value>com.kuaizhan.kzweixin.dao.mapper.auto.MsgMapper</value>
                <value>com.kuaizhan.kzweixin.dao.mapper.auto.FanMapper</value>
                <value>com.kuaizhan.kzweixin.dao.mapper.auto.OpenIdMapper</value>
            </list>
        </property>
    </bean>

    <!-- 配置mybatis sqlsessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="routingDataSource"/>
        <property name="mapperLocations" value="classpath:mapper/**/*.xml"/>
        <property name="typeAliasesPackage" value="com.kuaizhan.kzweixin.dao.po"/>
    </bean>

    <!-- 配置扫描包，加载mapper代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kuaizhan.kzweixin.dao.mapper"/>
    </bean>

    <!--定义注解驱动事务-->
    <tx:annotation-driven />
    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource" />
    </bean>
</beans>